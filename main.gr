module Hello

from "./evaluator.gr" include Evaluator
from "./parsing.gr" include Parser
from "./scope.gr" include Scope

from "list" include List
from "buffer" include Buffer
from "result" include Result
from "bytes" include Bytes
from "wasi/file" include File

//print("Expression: ")
//let input = File.fdRead(File.stdin, 40000)
//let input = Result.unwrap(input)

Scope.setVariable("n", 5, Evaluator.rootScope)

//Evaluator.eval("yeah(x) = n + x")
Evaluator.eval("set even in N+ = x % 2 == 0")
Evaluator.eval("f: x in even\\6 f(x) = x + 1")
//print(Evaluator.eval("f(4)")) //should return 5
print(Evaluator.eval("f(8)")) //should return 9
print(Evaluator.eval("f(0)")) //should fail
//print(Evaluator.eval("power(2, 5)")) //should return 32

//ToDo:
// implement function restriction
// implement set modifier like 
//  - without 1:\1
//  - without zero: +


//let value = Evaluator.eval("yeah+pi+(1+2)*3-4")
