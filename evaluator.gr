module Evaluator

from "./parsing.gr" include Parser
from "./tree.gr" include Tree
from "map" include Map
from "./tree.gr" include Tree

let rec visit = (tree) => {
    match(tree) {
        Tree.NumberExpression(num) => num,
        Tree.BinaryExpression(left, op, right) => {
            let evaluatedLeft = visit(left)
            let evaluatedRight = visit(right)

            match(op) {
                "+" => evaluatedLeft + evaluatedRight,
                "-" => evaluatedLeft - evaluatedRight,
                "*" => evaluatedLeft * evaluatedRight,
                "/" => evaluatedLeft / evaluatedRight,
                _ => 0
            }
        },
        _ => 0
    }
}

provide let eval = (input) => {
    let tree = Parser.parse(input)

    visit(tree)
}
